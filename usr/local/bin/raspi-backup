#!/usr/bin/env bash

# Example crontab entry:
#
# ##
# # Backup
# ##
# 0 4 * * Sat /usr/local/bin/raspi-backup

isMounted () {
    findmnt "$1" > /dev/null;
}


run_backup () {
    # Set some variables
    DATE=`/bin/date '+%Y-%m-%d'`
    TIMESTAMP="$(date +%s)"
    HOSTNAME="$(hostname)"
    RETENTION_TIME="21" # How long in days a backup should be kept

    DEVICE_TO_BACKUP="/dev/sda"

    BACKUP_DIR="/mnt/Backup/"
    BACKUP_FILE_NAME="${HOSTNAME}-${DATE}-${TIMESTAMP}.img"

    # Mount the backup directory if necessary
    if ! isMounted "${BACKUP_DIR}";
        then
            sudo mount ${BACKUP_DIR}
    fi

    # Check again to see if the mount was successful.
    # If not, stop right here, something went horribly wrong
    if ! isMounted "${BACKUP_DIR}";
        then
            echo "Backup directory could not be mounted. Exiting here!"

            exit 1;
    fi

    # Now go forth and run the backup
    echo "Backing up ${DEVICE_TO_BACKUP} to ${BACKUP_DIR} as ${BACKUP_FILE_NAME} ..."
    time sudo dd if=${DEVICE_TO_BACKUP} of=${BACKUP_DIR}${BACKUP_FILE_NAME} bs=1M status=progress

    # Check for PiShrink (https://github.com/Drewsif/PiShrink)
    if command -v /usr/local/bin/pishrink > /dev/null
        then
            # Shrinking the image
            sudo /usr/local/bin/pishrink -v ${BACKUP_DIR}${BACKUP_FILE_NAME}
    fi

    # Deleting backups older than 21 days
    if [[ $(find ${BACKUP_DIR} -type f -mtime +$(RETENTION_TIME) -name "*\\${HOSTNAME}-*.img") ]];
        then
            find ${BACKUP_DIR} -type f -mtime +$(RETENTION_TIME) -name "${HOSTNAME}-*.img" | xargs rm
    fi
}


run_backup
