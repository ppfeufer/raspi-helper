#!/usr/bin/env bash

current_user_home=${HOME} # sudo returns /root here, which is intended
git_repos_directory=${1:-"${current_user_home}/git-repos/"}
target_directory="${git_repos_directory%/}/"

for path in ${target_directory}*/
    do
        [ -d "${path}" ] || continue # if not a directory, skip

        dirname="$(basename "${path}")"

        printf "Attempting to update git repository in \"${path}\" …\n"

        cd ${path}

        if [[ $(git rev-parse --show-toplevel 2>/dev/null) == "$(cd -P "${path}" && pwd)" ]]
            then
                printf "Git repository \"${dirname}\" detected, updating …\n"

                # We do a hard reset here instead of a simple pull, in case the
                # RasPi does write to any of linked config files, which it's not
                # supposed to do.
#                main_branch=$(git branch -vv | grep -Po "^[\s\*]*\K[^\s]*(?=.*$(git branch -rl '*/HEAD' | grep -o '[^ ]\+$'))")
#                main_branch_remote_tracking=$(git branch -r | grep -Po 'HEAD -> \K.*$')

#                git checkout ${main_branch}
#                git fetch --all
#                git reset --hard ${main_branch_remote_tracking}

                git reset --hard HEAD
                git pull
            else
                printf "\"${dirname}\" doesn't seem to be a git repository!"
        fi

        printf "\n\n"
    done
